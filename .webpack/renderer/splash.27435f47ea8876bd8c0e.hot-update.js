"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateprojet_kathara"]("splash",{

/***/ "./src/lib/ExportConf.ts":
/*!*******************************!*\
  !*** ./src/lib/ExportConf.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ModelToKatharaConf_1 = __webpack_require__(/*! ./ModelToKatharaConf */ \"./src/lib/ModelToKatharaConf.ts\");\nvar RegexConst = __importStar(__webpack_require__(/*! ./RegexConst */ \"./src/lib/RegexConst.ts\"));\nvar Device_1 = __webpack_require__(/*! ../model/Device */ \"./src/model/Device.tsx\");\nvar ExportConf = /** @class */ (function () {\n    function ExportConf() {\n    }\n    ExportConf.prototype.exportLabConf = function (lab) {\n        var conf = \"\";\n        for (var key in lab) {\n            if (key == 'labName' || key == 'description' || key == 'author' || key == 'email' || key == 'version') {\n                conf += ModelToKatharaConf_1.ModelToKatharaConf[key] + \"\\\"\".concat(lab[key], \"\\\"\") + \"\\n\";\n            }\n        }\n        if (lab.devices) {\n            lab.devices.forEach(function (device) {\n                if (device.interfaces) {\n                    device.interfaces.forEach(function (itf) {\n                        if (itf.collision_domain) {\n                            conf += ModelToKatharaConf_1.ModelToKatharaConf['collision_domain'] + itf.collision_domain + \"\\n\";\n                            conf = conf.replace(\"%interfaceName%\", itf.interfaceName);\n                        }\n                    });\n                }\n                if (device.type == Device_1.DeviceType.Router) {\n                    if (device.optional_parameters && device.optional_parameters.ipv6 == true) {\n                        conf += '%deviceName%[sysctl]=net.ipv6.conf.all.forwarding=1 \\n';\n                    }\n                }\n                if (device.optional_parameters) {\n                    for (var key in device.optional_parameters) {\n                        if (key == 'image' || key == 'memory' || key == 'cpus' || key == 'port' || key == 'bridged' || key == 'ipv6' || key == 'ipv6' || key == 'exec' || key == 'sysctl' || key == 'env' || key == 'shell' || key == 'num_terms') {\n                            conf += ModelToKatharaConf_1.ModelToKatharaConf[key] + \"\".concat(device.optional_parameters[key]) + '\\n';\n                        }\n                    }\n                }\n                var deviceName = device.deviceName.toLowerCase();\n                while (conf.indexOf('%deviceName%') !== -1) {\n                    conf = conf.replace('%deviceName%', deviceName);\n                }\n            });\n        }\n        return conf;\n    };\n    ExportConf.prototype.exportStartupConf = function (lab) {\n        var devicesStartupConf = {};\n        lab.devices.forEach(function (device) {\n            var conf = \"\";\n            if (device.interfaces) {\n                device.interfaces.forEach(function (itf) {\n                    if (itf.is_up == true && itf.interfaceName) {\n                        conf += ModelToKatharaConf_1.ModelToKatharaConf.IP_UP + '\\n';\n                        conf = conf.replace(\"%interfaceName%\", itf.interfaceName);\n                    }\n                    if (itf.interfaceName && itf.ip && itf.cidr) {\n                        conf += ModelToKatharaConf_1.ModelToKatharaConf.IP_ADDRESS_ADD + '\\n';\n                        for (var key in itf) {\n                            if (key == 'interfaceName' || key == 'ip' || key == 'cidr') {\n                                conf = conf.replace(\"%\".concat(key, \"%\"), itf[key]);\n                            }\n                        }\n                    }\n                    if (device.optional_parameters && device.optional_parameters.bridged && device.optional_parameters.bridged == true) {\n                        if (itf.ip.match(RegexConst.IP_REGEX)) {\n                            conf += ModelToKatharaConf_1.ModelToKatharaConf.IPV4_FORWARD + \"\\n\";\n                        }\n                        else {\n                            conf += ModelToKatharaConf_1.ModelToKatharaConf.IPV6_FORWARD + \"\\n\";\n                        }\n                    }\n                });\n            }\n            if (device.startups_commands) {\n                device.startups_commands.forEach(function (startupCmd) {\n                    conf += startupCmd + \"\\n\";\n                });\n            }\n            devicesStartupConf[device.deviceName.toLowerCase()] = conf;\n        });\n        return devicesStartupConf;\n    };\n    ExportConf.prototype.exportShutdownConf = function (lab) {\n        var devicesShutdownConf = {};\n        lab.devices.forEach(function (device) {\n            var conf = '';\n            if (device.shutdown_commands) {\n                device.shutdown_commands.forEach(function (shutdownCmd) {\n                    conf += shutdownCmd + \"\\n\";\n                });\n            }\n            devicesShutdownConf[device.deviceName.toLowerCase()] = conf;\n        });\n        return devicesShutdownConf;\n    };\n    return ExportConf;\n}());\nexports[\"default\"] = ExportConf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/ExportConf.ts\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("c7666f5bcbd17510f1c7")
/******/ })();
/******/ 
/******/ }
);